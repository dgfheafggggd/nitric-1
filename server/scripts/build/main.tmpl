// Code generated by nitric plugin builder - DO NOT EDIT.
//
// Source: github.com/nitrictech/plugins-poc/host/hacks/build

package main

import (
	"flag"
	"log"

	"github.com/nitrictech/nitric/server/runtime/storage"
	"github.com/nitrictech/nitric/server/runtime/pubsub"
	"github.com/nitrictech/nitric/server/runtime/service"
	"github.com/nitrictech/nitric/server/runtime"
    "github.com/nitrictech/nitric/server/runtime/plugin"
	{{- range .Storage }}
	{{ .Alias }} "{{ .Import }}"
	{{- end }}
	{{- range .Pubsub }}
	{{ .Alias }} "{{ .Import }}"
	{{- end }}
	{{ .Service.Alias }} "{{ .Service.Import }}"
)

var userCommand = flag.String("c", "", "The command to run")

// storagePluginRegistry maps plugin names to their storage plugin constructors
var storagePluginRegistry = map[string]plugin.Constructor[storage.Storage]{
	{{- range .Storage }}
	"{{ .Name }}": {{ .Alias }}.Plugin,
	{{- end }}
}

// pubsubPluginRegistry maps plugin names to their pubsub plugin constructors
var pubsubPluginRegistry = map[string]plugin.Constructor[pubsub.Pubsub]{
	{{- range .Pubsub }}
	"{{ .Name }}": {{ .Alias }}.Plugin,
	{{- end }}
}

func main() {
	flag.Parse()

	if userCommand == nil || *userCommand == "" {
		log.Fatalf("No command provided")
	}

    // Register all storage plugins
	runtime.RegisterPlugins(storage.Register, storagePluginRegistry)

    // Register all pubsub plugins
	runtime.RegisterPlugins(pubsub.Register, pubsubPluginRegistry)

	// Register service plugin
	service.Register({{ .Service.Alias }}.Plugin)

    // Start the host
    runtime.Start(*userCommand)
}
